/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import domen.Predmet;
import domen.PredmetNaStudijskomProgramu;
import domen.Status;
import domen.StudijskiProgram;
import java.util.List;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import renderer.PredmetRenderer;
import renderer.StatusRenderer;
import renderer.StudijskiProgramRenderer;
import transfer.util.IOperation;

/**
 *
 * @author Petar
 */
public class FPredmetNaSmeru extends javax.swing.JDialog {

    /**
     * Creates new form FPredmetNaSmeru
     */
    public FPredmetNaSmeru(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centerForm();
        popuniStudijskiProgramCombo();
        popuniPredmetiCombo();
        popuniStatusCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboSmerovi = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboPredmeti = new javax.swing.JComboBox<>();
        jSpinnerESPB = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboStatus = new javax.swing.JComboBox<>();
        jBtnObrisi = new javax.swing.JButton();
        jBtnAzuriraj = new javax.swing.JButton();
        jBtnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Predmeti na smeru");

        jLabel1.setText("Izaberite std program:");

        jLabel2.setText("Izaberite predmet:");

        jLabel3.setText("Broj ESPB:");

        jLabel4.setText("Status:");

        jBtnObrisi.setText("Obrisi");

        jBtnAzuriraj.setText("Azuriraj");
        jBtnAzuriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAzurirajActionPerformed(evt);
            }
        });

        jBtnSacuvaj.setText("Sacuvaj");
        jBtnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jBtnSacuvaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jBtnAzuriraj)
                        .addGap(27, 27, 27)
                        .addComponent(jBtnObrisi))
                    .addComponent(jComboPredmeti, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboSmerovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSpinnerESPB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboSmerovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboPredmeti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jSpinnerESPB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnObrisi)
                    .addComponent(jBtnAzuriraj)
                    .addComponent(jBtnSacuvaj))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAzurirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAzurirajActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnAzurirajActionPerformed

    private void jBtnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSacuvajActionPerformed
        try {
            StudijskiProgram studijskiProgram = (StudijskiProgram) jComboSmerovi.getSelectedItem();
            Predmet predmet = (Predmet) jComboPredmeti.getSelectedItem();
            Status status = (Status) jComboStatus.getSelectedItem();

            int espb;

            try {
                jSpinnerESPB.commitEdit();
                espb = (int) jSpinnerESPB.getValue();

                if (espb < 0) {
                    throw new Exception();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Dozvoljeno je unos samo celih nenegaticnih brojeva!");
                return;
            }

            PredmetNaStudijskomProgramu pnsp = new PredmetNaStudijskomProgramu(predmet, studijskiProgram, status, espb);

            Kontroler.getInstance().posaljiZahtev(IOperation.KREIRAJ_PREDMET_NA_STUDIJSKOM_PROGRAMU, pnsp);
            PredmetNaStudijskomProgramu kreiranPredmetNaStudijskomProgramu = (PredmetNaStudijskomProgramu) Kontroler.getInstance().primiOdgovor();

            if (kreiranPredmetNaStudijskomProgramu != null) {
                JOptionPane.showMessageDialog(this, "Predmet: " + predmet.getNaziv() + " je uspesno dodat na studijski program: " + studijskiProgram.getNaziv());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jBtnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    private void centerForm() {
        setLocationRelativeTo(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAzuriraj;
    private javax.swing.JButton jBtnObrisi;
    private javax.swing.JButton jBtnSacuvaj;
    private javax.swing.JComboBox<Object> jComboPredmeti;
    private javax.swing.JComboBox<Object> jComboSmerovi;
    private javax.swing.JComboBox<Object> jComboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSpinner jSpinnerESPB;
    // End of variables declaration//GEN-END:variables

    private void popuniStudijskiProgramCombo() {
        try {
            Kontroler.getInstance().posaljiZahtev(IOperation.VRATI_SVE_STUDIJSKE_PROGRAME, null);
            List<StudijskiProgram> studijskiProgrami = (List<StudijskiProgram>) Kontroler.getInstance().primiOdgovor();

            for (StudijskiProgram studijskiProgram : studijskiProgrami) {
                jComboSmerovi.addItem(studijskiProgram);
            }

            jComboSmerovi.setRenderer(new StudijskiProgramRenderer());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void popuniPredmetiCombo() {
        try {
            Kontroler.getInstance().posaljiZahtev(IOperation.VRATI_SVE_PREDMETE, null);
            List<Predmet> predmeti = (List<Predmet>) Kontroler.getInstance().primiOdgovor();

            for (Predmet predmet : predmeti) {
                jComboPredmeti.addItem(predmet);
            }

            jComboPredmeti.setRenderer(new PredmetRenderer());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void popuniStatusCombo() {
        try {
            Kontroler.getInstance().posaljiZahtev(IOperation.VRATI_SVE_STATUSE, null);
            List<Status> statusi = (List<Status>) Kontroler.getInstance().primiOdgovor();

            for (Status status : statusi) {
                jComboStatus.addItem(status);
            }

            jComboStatus.setRenderer(new StatusRenderer());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
}

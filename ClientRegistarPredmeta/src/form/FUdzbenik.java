/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import domen.OsobaUVeziSaUdzbenikom;

import domen.Udzbenik;
import domen.UlogaUdzbenik;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import kontroler.Kontroler;
import table.model.OsobaUdzbenikTableModel;
import transfer.util.IOperation;

/**
 *
 * @author Petar
 */
public class FUdzbenik extends javax.swing.JDialog {

    /**
     * Creates new form FUnosUdzbenika
     */
    public FUdzbenik(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicijalizujComboBox();
        postaviTableModel();
        podesiSirinuKolona();
        centrirajFormu();
        pripremiFormuZaKreiranje();
    }

    public FUdzbenik(java.awt.Frame parent, boolean modal, int udzbenikId) {
        initComponents();
        inicijalizujComboBox();
        postaviTableModelZaUdzbenik(udzbenikId);
        podesiSirinuKolona();
        centrirajFormu();
        pripremiFormuZaPregedanje(udzbenikId);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTxtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTxtIzdavac = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboGodinaIzdanja = new javax.swing.JComboBox<>();
        jBtnSacuvaj = new javax.swing.JButton();
        jBtnAzuriraj = new javax.swing.JButton();
        jBtnObrisi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTxtStampa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTxtTiraz = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTxtIsbn = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblAutori = new javax.swing.JTable();
        jBtnDodajAutora = new javax.swing.JButton();
        jBtnObrisiAutora = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblRecenzenti = new javax.swing.JTable();
        jBtnDodajRecenzenta = new javax.swing.JButton();
        jBtnObrisiRecenzenta = new javax.swing.JButton();
        jTxtRedniBrojIzdanja = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTxtUdbzenikId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unos udzbenika");
        setMaximumSize(new java.awt.Dimension(406, 362));
        setMinimumSize(new java.awt.Dimension(406, 362));
        setResizable(false);

        jLabel1.setText("Naziv: ");

        jLabel2.setText("Izdavac:");

        jLabel3.setText("Godina izdanja:");

        jBtnSacuvaj.setText("Sacuvaj");
        jBtnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSacuvajActionPerformed(evt);
            }
        });

        jBtnAzuriraj.setText("Azuriraj");
        jBtnAzuriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAzurirajActionPerformed(evt);
            }
        });

        jBtnObrisi.setText("Obrisi");
        jBtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnObrisiActionPerformed(evt);
            }
        });

        jLabel4.setText("Stampa:");

        jLabel5.setText("Redni broj izdanja:");

        jLabel6.setText("Tiraz:");

        jTxtTiraz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtTirazActionPerformed(evt);
            }
        });

        jLabel7.setText("ISBN:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Autori"));

        jScrollPane1.setViewportView(jTblAutori);

        jBtnDodajAutora.setText("+");
        jBtnDodajAutora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDodajAutoraActionPerformed(evt);
            }
        });

        jBtnObrisiAutora.setText("-");
        jBtnObrisiAutora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnObrisiAutoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnDodajAutora)
                    .addComponent(jBtnObrisiAutora, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtnDodajAutora)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnObrisiAutora))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Recenzenti"));

        jScrollPane2.setViewportView(jTblRecenzenti);

        jBtnDodajRecenzenta.setText("+");
        jBtnDodajRecenzenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDodajRecenzentaActionPerformed(evt);
            }
        });

        jBtnObrisiRecenzenta.setText("-");
        jBtnObrisiRecenzenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnObrisiRecenzentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnDodajRecenzenta)
                    .addComponent(jBtnObrisiRecenzenta, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtnDodajRecenzenta)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnObrisiRecenzenta))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel8.setText("id:");

        jTxtUdbzenikId.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jBtnAzuriraj)
                        .addGap(31, 31, 31)
                        .addComponent(jBtnSacuvaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnObrisi)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtTiraz, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtRedniBrojIzdanja, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtStampa, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboGodinaIzdanja, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtIzdavac, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTxtNaziv, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(jTxtUdbzenikId))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTxtUdbzenikId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtIzdavac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboGodinaIzdanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtStampa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTxtRedniBrojIzdanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTxtTiraz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTxtIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAzuriraj)
                    .addComponent(jBtnSacuvaj)
                    .addComponent(jBtnObrisi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnDodajAutoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDodajAutoraActionPerformed
        try {
            OsobaUdzbenikTableModel atm = (OsobaUdzbenikTableModel) jTblAutori.getModel();
            atm.dodajNovuOsobuZaUdzbenik("autor");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Neuspesno dodavanje autora!");
        }
    }//GEN-LAST:event_jBtnDodajAutoraActionPerformed

    private void jBtnObrisiAutoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnObrisiAutoraActionPerformed
        try {
            int selectedIndex = jTblAutori.getSelectedRow();
            if (selectedIndex >= 0) {
                OsobaUdzbenikTableModel atm = (OsobaUdzbenikTableModel) jTblAutori.getModel();
                atm.obrisiAutora(selectedIndex);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jBtnObrisiAutoraActionPerformed

    private void jBtnAzurirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAzurirajActionPerformed
        try {
            Udzbenik udzbenik = new Udzbenik();
            int udzbenikId = 0;
            try {
                udzbenikId = Integer.parseInt(jTxtUdbzenikId.getText().trim());
                udzbenik.setUdzbenikId(udzbenikId);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Doslo je do greske! Nije moguce odrediti id udzbenika!");
                return;
            }

            String naziv = jTxtNaziv.getText().trim();
            if (naziv.length() == 0) {
                JOptionPane.showMessageDialog(this, "Morate uneti naziv");
                return;
            } else {
                udzbenik.setNaziv(naziv);
            }

            String izdavac = jTxtIzdavac.getText().trim();
            udzbenik.setIzdavac(izdavac);

            int godinaIzdanja = (int) jComboGodinaIzdanja.getSelectedItem();
            udzbenik.setGodinaIzdanja(godinaIzdanja);

            String stampa = jTxtStampa.getText().trim();
            udzbenik.setStampa(stampa);

            int rbrIzdanja = 0;

            try {
                if (jTxtRedniBrojIzdanja.getText().trim().length() == 0) {
                    udzbenik.setRbrIzdanja(0);
                } else {
                    rbrIzdanja = Integer.parseInt(jTxtRedniBrojIzdanja.getText());
                    udzbenik.setRbrIzdanja(rbrIzdanja);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Redni broj izdanja mora biti ceo broj");
                return;
            }

            int tiraz = 0;
            try {
                if (jTxtTiraz.getText().trim().length() == 0) {
                    udzbenik.setTiraz(0);
                } else {
                    tiraz = Integer.parseInt(jTxtTiraz.getText());
                    udzbenik.setTiraz(tiraz);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Tiraz mora biti ceo broj");
                return;
            }

            int isbn = 0;
            try {
                if (jTxtIsbn.getText().trim().length() == 0) {
                    udzbenik.setIsbn(0);
                } else {
                    isbn = Integer.parseInt(jTxtIsbn.getText());
                    udzbenik.setIsbn(isbn);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "ISBN mora biti ceo broj");
                return;
            }

            OsobaUdzbenikTableModel atm = (OsobaUdzbenikTableModel) jTblAutori.getModel();
            List<OsobaUVeziSaUdzbenikom> autoriFromTbl = atm.vratiSveAutore();
            for (OsobaUVeziSaUdzbenikom ouvsu : autoriFromTbl) {
                ouvsu.setUlogaUdzbenik(new UlogaUdzbenik(1, "autor"));
            }

            OsobaUdzbenikTableModel outm = (OsobaUdzbenikTableModel) jTblRecenzenti.getModel();
            List<OsobaUVeziSaUdzbenikom> recenzentiFromTbl = outm.vratiSveRecenzente();
            for (OsobaUVeziSaUdzbenikom ouvsu : recenzentiFromTbl) {
                ouvsu.setUlogaUdzbenik(new UlogaUdzbenik(2, "recenzent"));
            }

            List<OsobaUVeziSaUdzbenikom> list = new ArrayList<>();
            list.addAll(autoriFromTbl);
            list.addAll(recenzentiFromTbl);

            udzbenik.setOsobeUVeziSaUdzbenikom(list);

            Kontroler.getInstance().posaljiZahtev(IOperation.AZURIRAJ_UDZBENIK, udzbenik);
            Udzbenik udzbenikFromDB = (Udzbenik) Kontroler.getInstance().primiOdgovor();
            if (udzbenikFromDB != null) {
                JOptionPane.showMessageDialog(this, "Udzbenik je uspesno azuriran!");

                dispose();

                JDialog fSelectUdzbenik = new FSelectUdzbenik(FMain.getInstance(), true);
                fSelectUdzbenik.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom azuriranja  udzbenika!");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom azuriranja  udzbenika!.Greska:" + ex.getMessage());
        }
    }//GEN-LAST:event_jBtnAzurirajActionPerformed

    private void jBtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnObrisiActionPerformed
        try {
            int udzbenikId = Integer.parseInt(jTxtUdbzenikId.getText());
            Kontroler.getInstance().posaljiZahtev(IOperation.OBRISI_UDZBENIK, udzbenikId);
            Udzbenik udzbenik = (Udzbenik) Kontroler.getInstance().primiOdgovor();
            if (udzbenik != null) {
                JOptionPane.showMessageDialog(this, "Udzbenik: " + udzbenik.getNaziv() + " je uspesno obrisan!");
                dispose();
                JDialog fSelectUdzbenik = new FSelectUdzbenik(FMain.getInstance(), true);
                fSelectUdzbenik.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom brisanja udzbenika!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom brisanja udzbenika!");
        }
    }//GEN-LAST:event_jBtnObrisiActionPerformed

    private void jBtnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSacuvajActionPerformed
        try {
            Udzbenik udzbenik = new Udzbenik();

            String naziv = jTxtNaziv.getText();
            if (naziv.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Morate uneti naziv");
                return;
            } else {
                udzbenik.setNaziv(naziv);
            }

            String izdavac = jTxtIzdavac.getText().trim();
            udzbenik.setIzdavac(izdavac);

            int godinaIzdanja = (int) jComboGodinaIzdanja.getSelectedItem();
            udzbenik.setGodinaIzdanja(godinaIzdanja);

            String stampa = jTxtStampa.getText().trim();
            udzbenik.setStampa(stampa);

            int rbrIzdanja = 0;

            try {
                if (jTxtRedniBrojIzdanja.getText().trim().length() == 0) {
                    udzbenik.setRbrIzdanja(0);
                } else {
                    rbrIzdanja = Integer.parseInt(jTxtRedniBrojIzdanja.getText());
                    udzbenik.setRbrIzdanja(rbrIzdanja);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Redni broj izdanja mora biti ceo broj");
                return;
            }

            int tiraz = 0;
            try {
                if (jTxtTiraz.getText().trim().length() == 0) {
                    udzbenik.setTiraz(0);
                } else {
                    tiraz = Integer.parseInt(jTxtTiraz.getText());
                    udzbenik.setTiraz(tiraz);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Tiraz mora biti ceo broj");
                return;
            }

            int isbn = 0;
            try {
                if (jTxtIsbn.getText().trim().length() == 0) {
                    udzbenik.setIsbn(0);
                } else {
                    isbn = Integer.parseInt(jTxtIsbn.getText());
                    udzbenik.setIsbn(isbn);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "ISBN mora biti ceo broj");
                return;
            }

            OsobaUdzbenikTableModel atm = (OsobaUdzbenikTableModel) jTblAutori.getModel();
            List<OsobaUVeziSaUdzbenikom> autoriFromTbl = atm.vratiSveAutore();

            OsobaUdzbenikTableModel outm = (OsobaUdzbenikTableModel) jTblRecenzenti.getModel();
            List<OsobaUVeziSaUdzbenikom> recenzentiFromTbl = outm.vratiSveRecenzente();

            List<OsobaUVeziSaUdzbenikom> list = new ArrayList<>();
            list.addAll(autoriFromTbl);
            list.addAll(recenzentiFromTbl);

            udzbenik.setOsobeUVeziSaUdzbenikom(list);
            Kontroler.getInstance().posaljiZahtev(IOperation.KREIRAJ_UDZBENIK, udzbenik);
            Udzbenik udzbenikFromDB = (Udzbenik) Kontroler.getInstance().primiOdgovor();
            if (udzbenikFromDB != null) {
                JOptionPane.showMessageDialog(this, "Udzbenik je uspesno kreiran!");

                dispose();

                JDialog fSelectUdzbenik = new FSelectUdzbenik(FMain.getInstance(), true);
                fSelectUdzbenik.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom kreiranja  udzbenika!");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom kreiranja  udzbenika!");
        }
    }//GEN-LAST:event_jBtnSacuvajActionPerformed

    private void jTxtTirazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtTirazActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtTirazActionPerformed

    private void jBtnDodajRecenzentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDodajRecenzentaActionPerformed
        try {
            OsobaUdzbenikTableModel rtm = (OsobaUdzbenikTableModel) jTblRecenzenti.getModel();
            rtm.dodajNovuOsobuZaUdzbenik("recenzent");
        } catch (Exception e) {
            System.out.println("Dogodila se greska prilikom brisanja recenzenta iz tabele");
            JOptionPane.showMessageDialog(this, "Neuspesno dodavanje recenzenta!");
        }
    }//GEN-LAST:event_jBtnDodajRecenzentaActionPerformed

    private void jBtnObrisiRecenzentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnObrisiRecenzentaActionPerformed
        try {
            int selectedIndex = jTblRecenzenti.getSelectedRow();
            if (selectedIndex >= 0) {
                OsobaUdzbenikTableModel rtm = (OsobaUdzbenikTableModel) jTblRecenzenti.getModel();
                rtm.obrisiOsobuNaUdzbeniku(selectedIndex);
            }
        } catch (Exception e) {
            System.out.println("Dogodila se greska prilikom brisanja recenzenta iz tabele");
        }
    }//GEN-LAST:event_jBtnObrisiRecenzentaActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAzuriraj;
    private javax.swing.JButton jBtnDodajAutora;
    private javax.swing.JButton jBtnDodajRecenzenta;
    private javax.swing.JButton jBtnObrisi;
    private javax.swing.JButton jBtnObrisiAutora;
    private javax.swing.JButton jBtnObrisiRecenzenta;
    private javax.swing.JButton jBtnSacuvaj;
    private javax.swing.JComboBox<Object> jComboGodinaIzdanja;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTblAutori;
    private javax.swing.JTable jTblRecenzenti;
    private javax.swing.JTextField jTxtIsbn;
    private javax.swing.JTextField jTxtIzdavac;
    private javax.swing.JTextField jTxtNaziv;
    private javax.swing.JTextField jTxtRedniBrojIzdanja;
    private javax.swing.JTextField jTxtStampa;
    private javax.swing.JTextField jTxtTiraz;
    private javax.swing.JTextField jTxtUdbzenikId;
    // End of variables declaration//GEN-END:variables

    private void inicijalizujComboBox() {
        int trenutnaGodina = LocalDate.now().getYear();

        for (int i = trenutnaGodina; i >= trenutnaGodina - 100; i--) {
            jComboGodinaIzdanja.addItem(i);
        }
    }

    private void centrirajFormu() {
        setLocationRelativeTo(null);
    }

    private void postaviTableModel() {
        try {
            TableModel atm = new OsobaUdzbenikTableModel(new ArrayList<>());
            jTblAutori.setModel(atm);

            TableModel rtm = new OsobaUdzbenikTableModel(new ArrayList<>());
            jTblRecenzenti.setModel(rtm);
        } catch (Exception e) {
            System.out.println("Dogodila se greska prilikom postavljanja table modela-a");
        }
    }

    private void podesiSirinuKolona() {
        jTblAutori.getColumnModel().getColumn(0).setMaxWidth(20);
        jTblAutori.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        jTblRecenzenti.getColumnModel().getColumn(0).setMaxWidth(20);
        jTblRecenzenti.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
    }

    private void resetujSvaPolja() {
        jTxtIzdavac.setText("");
        jTxtIsbn.setText("");
        jTxtRedniBrojIzdanja.setText("");
        jTxtStampa.setText("");
        jTxtNaziv.setText("");
        OsobaUdzbenikTableModel atm = (OsobaUdzbenikTableModel) jTblAutori.getModel();
        atm.obrisiSveOsobeNaUdzbeniku();
        OsobaUdzbenikTableModel rtm = (OsobaUdzbenikTableModel) jTblRecenzenti.getModel();
        rtm.obrisiSveOsobeNaUdzbeniku();

        jComboGodinaIzdanja.setSelectedItem(LocalDate.now().getYear());
        jBtnObrisi.setEnabled(true);
        jBtnAzuriraj.setEnabled(true);
        jBtnSacuvaj.setEnabled(true);
    }

    private void pripremiFormuZaKreiranje() {
        pripremiFormu(FormMode.NEW);
    }

    private void pripremiFormu(FormMode formMode) {
        switch (formMode) {
            case NEW:
                jBtnObrisi.setEnabled(false);
                jBtnAzuriraj.setEnabled(false);
                jBtnSacuvaj.setEnabled(true);
                return;
            case VIEW:
                jBtnObrisi.setEnabled(true);
                jBtnAzuriraj.setEnabled(true);
                jBtnSacuvaj.setEnabled(false);
                return;
        }
    }

    private void pripremiFormuZaPregedanje(int udzbenikId) {
        try {
            Kontroler.getInstance().posaljiZahtev(IOperation.PRONADJI_UDZBENIK_PO_ID, udzbenikId);
            Udzbenik udzbenik = (Udzbenik) Kontroler.getInstance().primiOdgovor();
            jTxtNaziv.setText(udzbenik.getNaziv());
            jTxtIzdavac.setText(udzbenik.getIzdavac());
            jTxtIsbn.setText(udzbenik.getIsbn() + "");
            jTxtRedniBrojIzdanja.setText(udzbenik.getRbrIzdanja() + "");
            jTxtStampa.setText(udzbenik.getStampa());
            jTxtTiraz.setText(udzbenik.getTiraz() + "");
            jTxtUdbzenikId.setText(udzbenik.getUdzbenikId() + "");
            jComboGodinaIzdanja.setSelectedItem(udzbenik.getGodinaIzdanja());

            OsobaUdzbenikTableModel atm = (OsobaUdzbenikTableModel) jTblAutori.getModel();
            atm.vratiSveAutore().clear();

            OsobaUdzbenikTableModel rtm = (OsobaUdzbenikTableModel) jTblRecenzenti.getModel();
            rtm.vratiSveRecenzente().clear();

            pripremiFormu(FormMode.VIEW);

        } catch (Exception e) {
            System.out.println("Dogodila se greska prilikom sredjivanja forme za prikaz. Greska: " + e.getMessage());
        }
    }

    private void postaviTableModelZaUdzbenik(int udzbenikId) {
        try {
            Kontroler.getInstance().posaljiZahtev(IOperation.VRATI_SVE_AUTORE, udzbenikId);
            List<OsobaUVeziSaUdzbenikom> autori = (List<OsobaUVeziSaUdzbenikom>) Kontroler.getInstance().primiOdgovor();
            TableModel atm = new OsobaUdzbenikTableModel(autori);
            jTblAutori.setModel(atm);

            Kontroler.getInstance().posaljiZahtev(IOperation.VRATI_SVE_RECENZENTE, udzbenikId);
            List<OsobaUVeziSaUdzbenikom> recenzenti = (List<OsobaUVeziSaUdzbenikom>) Kontroler.getInstance().primiOdgovor();
            TableModel rtm = new OsobaUdzbenikTableModel(recenzenti);
            jTblRecenzenti.setModel(rtm);
        } catch (Exception e) {
            System.out.println("Dogodila se greska prilikom postavljanja Table model-a ");
        }
    }

}
